What happens when you initialize a repository? Why do you need to do it?
	When you initialize a repository a hidden folder called .git is created in the directory.
	This folder stores metadata git needs about the history of your files.
	You need to initialize the repostory to create a git repository, rather than just
	a directory, or folder.
	
How is the staging area different from the working directory and the repository? 
What value do you think it offers?
	The staging area allows you to selectively add files to make a logical commit.
	The working directory contains all the files in the folder.  The repository 
	contains the files you've commited and history about them in metadate .git folder.
	
How can you use the staging area to make sure you have one commit per logical change?
	If you've made two separate logical changes since your last commit, you can use the
	staging area to only add files for one change, then commit them, then add the files
	for the second change and commit them separately.  This assumes that each change 
	touched separate files.

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
	Branches would be helpful when you want to try an experiment but also want to be able
	to easily revert to your production code, or if you want two similar but different
	versions of the code.
	Branches help because they make it easy to revert to specific states using human
	understandable names instead of having to remember specific commit IDs.  Also with 
	branches you can make bug fixes on easily on master if necessary.